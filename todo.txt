#todo:
    Note:
        - Logout logic does work but its status code and message isn't correct and needed to be fixed
        - I need to set author of Task to the person that is logged in instead of adding it by user
        - set a good time for simple jwt config
        - add log out or blocklist if we needed
        - when we log in and we get token, if we log in again, last token wouldn't revoke itself and user has 2 tokens
        or more base on how much he logs in
        - make a decision whether I should tell user that extra fields that they are sending in their request aren't
        included in our model or not Task views, put method (because of security stuffs)
        - make sure that media url is secure for document and sending files for employees because without any custom
        logic, user can use that url to access that media
        - Keep in mind that I created a command and I have to add it to the steps in order to use this project for
        README.py
    --------------------------------------------------------------------------------------------------------------------
    What I have to do:
        - Create these models: Employee, Role, Permission, Task, Message, Report, Document
        - Create API for Role and Permissions
        - Add details of APIs at the end of project in API Documentation
        - Complete user_management app
        - Add change password for employee and possibly username or email
        - Learn about how to upload a picture through my API and how should i handle it in backened in my Profile APIs
        - make sure that validation for username and email and password work and test them
        - add the logic that first user that is created, get superuser role
    --------------------------------------------------------------------------------------------------------------------
    What I was doing:
        - So many things had changes
        - my goals is to implement this: only manager can create employee and set tasks for them and admin can do all
        things
        - I started from User app and i think i finished UserRegistration view and it works good, now i have to work on
        employee list view and make that if user's role is admin, it shows all user no matter their role and if it is
        manager, only shows employees
        - stop the stopwatch of windows
    --------------------------------------------------------------------------------------------------------------------
        What I have done:
        - Give basic structure to project
        - Create user_management app
        - Create user_management app's models
        - Register them to admin page
        - Create task_management app
        - Create Task model
        - Register Task model to admin page
        - Creating Profile each time we create a user with signals
        - Install DRF
        - Create serializer for Employee, Profile, Role, Permission models
        - Create register, login and logout logics
        - Create Task API and CRUD operation
        - Create Swagger for my APIs
        - Implement token base authentication and JTW and refresh token
        - I made the author of task be the logged-in user
        - I made only the user to see their only tasks
        - I made logics that when user try to update some fields like author and some fields that shouldn't change, give
        and error and tell user which fields are not allowed for task update logic
        - I made logics that if user tries to send fields that aren't in our task model, raise an error and tell user,
        which fields aren't in our model
        - I set different error message for each scenario of put validation
        - I added logic that only author of a task can delete the task
        - I added those logics for extra fields and not allowed fields that I implemented in put method, for creating
        Task object too
        - I created APIs for Profile
        - Adding MEDIA URL and ROOT
        - I created a custom command for creating administrator role and permissions
        - create permissions.py for custom roles
        - make only manager can assign employee role but admin can create admin and manager and employee
        - make only manager can see user lists that has employee role but admin can see all roles
        - make only manager can see and change employee's profile and admin can do those things for employee and manager
        but an admin can't change admin's profile and he can only visit
